% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writexlsx.R
\name{write.xlsx}
\alias{write.xlsx}
\title{write data to an xlsx file}
\usage{
write.xlsx(x, file, asTable = FALSE, ...)
}
\arguments{
\item{x}{object or a list of objects that can be handled by \code{\link{writeData}} to write to file}

\item{file}{xlsx file name}

\item{asTable}{write using writeDataTable as opposed to writeData}

\item{...}{optional parameters to pass to functions:
\itemize{
  \item{createWorkbook}
  \item{addWorksheet}
  \item{writeData}
  \item{freezePane}
  \item{saveWorkbook}
}

see details.}
}
\value{
A workbook object
}
\description{
write a data.frame or list of data.frames to an xlsx file
}
\details{
Optional parameters are:

\bold{createWorkbook Parameters}
\itemize{
  \item{\bold{creator}}{ A string specifying the workbook author}
}

\bold{addWorksheet Parameters}
\itemize{
  \item{\bold{sheetName}}{ Name of the worksheet}
  \item{\bold{gridLines}}{ A logical. If \code{FALSE}, the worksheet grid lines will be hidden.}
  \item{\bold{tabColour}}{ Colour of the worksheet tab. A valid colour (belonging to colours()) 
  or a valid hex colour beginning with "#".}
  \item{\bold{zoom}}{ A numeric between 10 and 400. Worksheet zoom level as a percentage.}
}

\bold{writeData/writeDataTable Parameters}
\itemize{
  \item{\bold{startCol}}{ A vector specifying the starting column(s) to write df}
  \item{\bold{startRow}}{ A vector specifying the starting row(s) to write df}
  \item{\bold{xy}}{ An alternative to specifying startCol and startRow individually. 
 A vector of the form c(startCol, startRow)}
  \item{\bold{colNames or col.names}}{ If \code{TRUE}, column names of x are written.}
  \item{\bold{rowNames or row.names}}{ If \code{TRUE}, row names of x are written.}
  \item{\bold{headerStyle}}{ Custom style to apply to column names.}
  \item{\bold{borders}}{ Either "surrounding", "columns" or "rows" or NULL.  If "surrounding", a border is drawn around the
data.  If "rows", a surrounding border is drawn a border around each row. If "columns", a surrounding border is drawn with a border
between each column.  If "\code{all}" all cell borders are drawn.}
  \item{\bold{borderColour}}{ Colour of cell border}
  \item{\bold{borderStyle}}{ Border line style.}
  \item{\bold{keepNA}} {If \code{TRUE}, NA values are converted to #N/A in Excel else NA cells will be empty. Defaults to FALSE.}
}

\bold{freezePane Parameters}
\itemize{
  \item{\bold{firstActiveRow}} {Top row of active region to freeze pane.}
  \item{\bold{firstActiveCol}} {Furthest left column of active region to freeze pane.}
  \item{\bold{firstRow}} {If \code{TRUE}, freezes the first row (equivalent to firstActiveRow = 2)}
  \item{\bold{firstCol}} {If \code{TRUE}, freezes the first column (equivalent to firstActiveCol = 2)}
}

\bold{colWidths Parameters}
\itemize{
  \item{\bold{colWidths}} {Must be value "auto". Sets all columns containing data to auto width.}
}


\bold{saveWorkbook Parameters}
\itemize{
  \item{\bold{overwrite}}{ Overwrite existing file (Defaults to TRUE as with write.table)}
}


columns of x with class Date or POSIXt are automatically
styled as dates and datetimes respectively.
}
\examples{

## write to working directory
options("openxlsx.borderColour" = "#4F80BD") ## set default border colour
write.xlsx(iris, file = "writeXLSX1.xlsx", colNames = TRUE, borders = "columns")
write.xlsx(iris, file = "writeXLSX2.xlsx", colNames = TRUE, borders = "surrounding")


hs <- createStyle(textDecoration = "BOLD", fontColour = "#FFFFFF", fontSize=12,
                  fontName="Arial Narrow", fgFill = "#4F80BD")

write.xlsx(iris, file = "writeXLSX3.xlsx", colNames = TRUE, borders = "rows", headerStyle = hs)

## Lists elements are written to individual worksheets, using list names as sheet names if available
l <- list("IRIS" = iris, "MTCATS" = mtcars, matrix(runif(1000), ncol = 5))
write.xlsx(l, "writeList1.xlsx", colWidths = c(NA, "auto", "auto"))

## different sheets can be given different parameters
write.xlsx(l, "writeList2.xlsx", startCol = c(1,2,3), startRow = 2,
           asTable = c(TRUE, TRUE, FALSE), withFilter = c(TRUE, FALSE, FALSE))

}
\seealso{
\code{\link{addWorksheet}}

\code{\link{writeData}}

\code{\link{createStyle}} for style parameters
}
\author{
Alexander Walker
}
